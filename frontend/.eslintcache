[{"/Users/christinatong/CS97/frontend/src/components/events.js":"1"},{"size":6013,"mtime":1608457186265,"results":"2","hashOfConfig":"3"},{"filePath":"4","messages":"5","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"6"},"19jryz9","/Users/christinatong/CS97/frontend/src/components/events.js",["7","8","9"],"import React from \"react\";\nimport \"../styles/layout.css\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrash, faCog } from \"@fortawesome/free-solid-svg-icons\";\n// import \"../clubs.js\";\nimport axios from 'axios';\nimport child from \"../components/xy.js\"\n\nexport default class events extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n        userUrl:[],\n        user: [],\n        masterclubList: [],\n        clubList: [],\n        categories: [],\n        profile_clubs: [],\n        profile_club_ids: [],\n        pk: '',\n        events: [],\n        curr_club: '',\n    };\n  }\n\n  componentDidMount() { \n    const categorySet = new Set();\n    // all club data\n    axios({\n        method: 'get',\n        url: \"http://127.0.0.1:8000/clubs/\",\n        headers: {\"authorization\": localStorage.getItem('token')},\n    }).then((response) => {\n        console.log(\"all club data:\")\n        console.log(response)\n        this.setState({clubList: response.data});\n        this.setState({masterclubList: response.data});\n        // set the category buttons by grabbing all categories\n        this.state.clubList.map((club, index) =>\n        {\n            categorySet.add(club.category);\n        })\n        this.setState({categories: [...categorySet]});\n        console.log(this.state.clubList);\n        console.log(this.state.categories);\n        console.log(localStorage.getItem('token'))\n    }).catch(function (error) {\n        console.log(error)\n    });\n\n    // user club profiles\n    axios({\n        method: 'get',\n        url: \"http://127.0.0.1:8000/profiles/\",\n        headers: {\"authorization\": localStorage.getItem('token')},\n    }).then((response) => {\n        console.log(\"user club profiles:\")\n        console.log(response)\n        this.setState({userUrl: response.data[0].url})\n        console.log(this.state.userUrl)\n        this.setState({profile_clubs: response.data[0].clubs})\n        console.log(this.state.profile_clubs)\n        this.setState({profile_club_ids: response.data[0].club_ids})\n        console.log(this.state.profile_club_ids)\n    }).catch(function (error) {\n        console.log(error)\n    });\n\n    // club events info\n    axios({\n      method: 'get',\n      url: \"http://127.0.0.1:8000/events/\",\n      headers: {\"authorization\": localStorage.getItem('token')},\n    }).then((response) => {\n        console.log(\"Events:\")\n        console.log(response)\n        this.setState({events: response.data})\n    }).catch(function (error) {\n        console.log(error)\n    });\n}\n\n  toggleMenu() {\n    var setting = document.getElementsByClassName(\"menu_setting\")[0];\n    var menu = document.getElementsByClassName(\"menu\")[0];\n    if (menu.style.display == \"flex\")\n    {\n        menu.style.display = \"none\";\n        setting.style.backgroundColor = \"#ffffff\";\n    }\n    else\n    {\n        menu.style.display = \"flex\";\n        setting.style.backgroundColor = \"#1488e0\";\n    }\n}\n\nlogOut() {\n    // log out; reset the token and usernamed cached and return to login page\n    localStorage.setItem(\"token\", \"\");\n    localStorage.setItem(\"username\", \"\");\n    window.location.href=\"#login\";\n}\n\nremoveClub(id) {\n  // adding a club to user profile\n  // creating the new list of club ids\n  var new_club_ids = []\n  for (var i = 0; i < this.state.profile_club_ids.length; i++)\n  {\n      if (this.state.profile_club_ids[i] !== id)\n          new_club_ids.push(this.state.profile_club_ids[i])\n  }\n  console.log(new_club_ids)\n  \n  axios({\n      method: 'patch',\n      url: this.state.userUrl,\n      data: {\n          club_ids: new_club_ids,\n      },\n      headers: {\"authorization\": localStorage.getItem('token')},\n  }).then((response) => {\n      console.log(\"unsubscribed from a club:\")\n      console.log(response)\n      // updating state values accordingly\n      this.setState({profile_clubs: response.data.clubs, profile_club_ids: response.data.club_ids})\n  }).catch(function (error) {\n      console.log(error)\n  });\n}\n\nwhenClicked(str){\n  this.setState({curr_club: str});\n  localStorage.setItem(\"score\", str);\n}\n\nrenderCards = (card, index) => {\n  return(\n    <div className=\"date\">{card.date}\n      <div className=\"event_card\">\n         <p className=\"event_title\">{card.name}</p>\n         <div className=\"event_container\">\n            <p className=\"event_info\">{card.club}</p>\n          </div>\n      </div>\n    </div>\n  );\n}\n\nrender() {\n    return (\n      <div className=\"body_nopadding\" style={{position: 'relative'}}>\n        <button className=\"menu_setting\" style = {{backgroundColor: '#ffff'}} onClick={()=>{this.toggleMenu()}}><FontAwesomeIcon icon={faCog}/></button>\n          <div className=\"menu\">\n            <div className=\"column\">\n                <h1 style={{marginTop: '0px'}}>{localStorage.getItem('username')}</h1>\n                <a href = '#events' className=\"menu_button\" style={{marginBottom: '16px'}}>Events</a>\n                <a href = '#clubs' className=\"menu_button\">Club Info</a>\n            </div>\n            <div className=\"column\">\n                <h2>SUBSCRIPTIONS</h2>\n                {this.state.profile_clubs.map((club, index) => {\n                    return(\n                        <div className=\"club_link\">\n                            <a href = \"#xy\" onClick={() => {this.whenClicked(club.name)}}> {club.name}</a>\n                            <button className=\"trash_button\" onClick={()=>{this.removeClub(club.pk)}}><FontAwesomeIcon icon={faTrash}/></button>\n                        </div>\n                    )\n                })}\n            </div>\n            <button className=\"button\" \n                style={{bottom: '0', position: 'absolute', marginBottom: '32px'}}\n                onClick={()=>{this.logOut()}}\n            >Log Out</button>\n          </div>\n              \n      <div className=\"body\" style={{position: 'relative', float: 'left'}}>\n          <p className=\"bodyHeader\" style={{color: \"#000000\"}}> Events </p>\n          {this.state.events.map(this.renderCards)} \n      </div>\n    </div>\n    );\n  }\n} \n",{"ruleId":"10","severity":1,"message":"11","line":7,"column":8,"nodeType":"12","messageId":"13","endLine":7,"endColumn":13},{"ruleId":"14","severity":1,"message":"15","line":39,"column":47,"nodeType":"16","messageId":"17","endLine":39,"endColumn":49},{"ruleId":"18","severity":1,"message":"19","line":86,"column":28,"nodeType":"20","messageId":"21","endLine":86,"endColumn":30},"no-unused-vars","'child' is defined but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]